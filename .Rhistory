#Chi_Square
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.StudentAllow)
#Stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.StudentAllow)) +
geom_bar(position="fill")+theme (plot.title = element_text(hjust = 0.5),text = element_text(family = "serif", size = 12),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle(" (1) a student allowed by their university to publicly express this belief(Gender)")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X2.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X2.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X2.FacultyAllow)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X2.FacultyAllow)) +
geom_bar(position="fill")+
geom_text(aes(label=after_stat('count')),stat='count',position='fill')+
theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Allow faculty member in University to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X2.FacultyAllow)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X2.FacultyAllow)) +
geom_bar(position="fill")+
theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Allow faculty member in University to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
#Chi_Square
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.StudentAllow)
#Stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.StudentAllow)) +
geom_bar(position="fill")+theme (plot.title = element_text(hjust = 0.5),text = element_text(family = "serif", size = 12),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle(" (1) a student allowed by their university to publicly express this belief(Gender)")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
#Chi_Square
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("1 prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X1.FacultyAllow)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X1.FacultyAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1)Allow faculty member in University to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
#Chi_Square
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1) prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
#Chi_Square
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.StudentAllow)
#Stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.StudentAllow)) +
geom_bar(position="fill")+theme (plot.title = element_text(hjust = 0.5),text = element_text(family = "serif", size = 12),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1) a student allowed by their university to publicly express this belief(Gender)")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
#Chi_Square
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1) prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.FacultyAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.FacultyAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1)Allow faculty member in University to express this belief publicly?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.LibraryAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.LibraryAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1)library should ban this belief?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.LibraryAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.LibraryAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1)library should ban this belief?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.StudentAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X2.StudentAllow)) +
geom_bar(position="fill")+theme (plot.title = element_text(hjust = 0.5),text = element_text(family = "serif", size = 12),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+ggtitle("(2) a student allowed by their university to publicly express this belief")+labs(y ="Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X2.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X2.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.StudentAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X2.StudentAllow)) +
geom_bar(position="fill")+theme (plot.title = element_text(hjust = 0.5),text = element_text(family = "serif", size = 12),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+ggtitle("(2) a student allowed by their university to publicly express this belief")+labs(y ="Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X2.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.LibraryAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X2.LibraryAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)library should ban this belief?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
#Chi_Square
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X1.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X1.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1)Prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X1.FacultyAllow)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X1.FacultyAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1)Allow faculty member in University to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X1.LibraryAllow)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X1.LibraryAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1)library should ban this belief?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X2.StudentAllow)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X2.StudentAllow)) +
geom_bar(position="fill")+theme (plot.title = element_text(hjust = 0.5),text = element_text(family = "serif", size = 12),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+ggtitle("(2) a student allowed by their university to publicly express this belief")+labs(y ="Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X2.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X2.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X2.FacultyAllow)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X2.FacultyAllow)) +
geom_bar(position="fill")+
theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Allow faculty member in University to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Political_Slant,Dat_filtered$X2.LibraryAllow)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X2.LibraryAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)library should ban this belief?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
#Recode Gender numeric value into gender category
Dat_filtered$Gender= recode_factor(Dat_filtered$Gender,"1"= "Male","2" = "Female")
#Chi_Square
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.StudentAllow)
#Stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.StudentAllow)) +
geom_bar(position="fill")+theme (plot.title = element_text(hjust = 0.5),text = element_text(family = "serif", size = 12),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1) a student allowed by their university to publicly express this belief(Gender)")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
#Chi_Square
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1) prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.FacultyAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.FacultyAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1)Allow faculty member in University to express this belief publicly?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X1.LibraryAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X1.LibraryAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(1)library should ban this belief?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.StudentAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X2.StudentAllow)) +
geom_bar(position="fill")+theme (plot.title = element_text(hjust = 0.5),text = element_text(family = "serif", size = 12),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+ggtitle("(2) a student allowed by their university to publicly express this belief")+labs(y ="Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.Prohibited)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X2.Prohibited)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Prohibited in US for people to express this belief publicly?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.FacultyAllow)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X2.FacultyAllow)) +
geom_bar(position="fill")+
geom_text(aes(label=after_stat('count')),stat='count',position='fill')+
theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Allow faculty member in University to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.FacultyAllow)
# stacked
ggplot(Dat_filtered, aes(Political_Slant, fill=X2.FacultyAllow)) +
geom_bar(position="fill")+
theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Allow faculty member in University to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.FacultyAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X2.FacultyAllow)) +
geom_bar(position="fill")+
theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)Allow faculty member in University to express this belief publicly?")+labs(y = "Proportion", x = "Political Slant",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
chisq.test(Dat_filtered$Gender,Dat_filtered$X2.LibraryAllow)
# stacked
ggplot(Dat_filtered, aes(Gender, fill=X2.LibraryAllow)) +
geom_bar(position="fill")+theme(plot.title = element_text(hjust = 0.5),text = element_text(family = "serif",size = 12),panel.grid.major = element_blank(), panel.grid.minor =element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"))+
ggtitle("(2)library should ban this belief?")+labs(y = "Proportion", x = "Gender",fill = "Answer choice")
# bar dodged
#ggplot(Dat_filtered, aes(Political_Slant, fill=X1.StudentAllow)) +
#geom_bar(position="dodge")
#Correlation Test
#Plot
cor.test(Envy_data$Disp_envy,Envy_data$InduceEnvy)
#Load data
library(tidyverse)
Dat <- read.csv("Prolific-Envy.csv",TRUE)
Dat1 <- Dat %>% filter(Consent == "1")
#Load data
library(tidyverse)
Dat <- read.csv("Prolific-Envy.csv",TRUE)
Dat1 <- Dat %>% filter(Consent == "1")
STRANGE <- Dat1 %>% filter(is.na(Attention1))
#Delete the participants' data that fail the attention checks
Dat_attention_check_passed <- Dat1 %>% filter(Attention1 == 1)
Dat_attention_check_failed <- Dat1 %>% filter(Attention1 != 1)
Envy_data <- Dat_attention_check_passed %>% mutate(Disp_envy = (Envy1+Envy2+Envy3+Envy4+Envy5+Envy6+Envy7+Envy8)/8) %>% mutate(InduceEnvy = (Envied.FC.Preference + Envied.PA.Preference)/2) %>% mutate(EnvyEnjoyment =(Envied.PA.Enjoyment+Envied.PA.Enjoyment)/2)
#Correlation Test
#Plot
cor.test(Envy_data$Disp_envy,Envy_data$InduceEnvy)
ggplot(Envy_data, aes(x= Disp_envy, y = InduceEnvy))+
geom_jitter()+
labs(x = "Disp_Envy", y = "InduceEnvy")+
theme (plot.title = element_text(hjust = 0.5), text = element_text(family = "serif", size = 12),          panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
geom_smooth(method = lm)+
ggtitle("Dispositional Envy/Tendency to induce others envy")+labs(x = "Dispositional Envy", y = "Tendency to induce Envy")
Data <- read.csv("Envy_competiveness.csv",TRUE)
Data1 <- Dat %>% filter(Consent == "1")
#Load data
library(tidyverse)
Data <- read.csv("Envy_competiveness.csv",TRUE)
Data1 <- Dat %>% filter(Consent == "1")
#Delete the participants' data that fail the attention checks
Data_attention_check_passed <- Data1 %>% filter(Attention1 == 13)
#Delete the participants' data that fail the attention checks
Data_attention_check_passed <- Data_attention_check_passed %>% filter(Attention1 == 13)
glimpse(Data_attention_check_passed)
Data <- read.csv("Envy_competiveness.csv",TRUE)
Data1 <- Dat %>% filter(Consent == "1")
#Delete the participants' data that fail the attention checks
Data_attention_check_passed <- Data_attention_check_passed %>% filter(Attention1 == 13)
glimpse(Data_attention_check_passed)
Data <- read.csv("Envy_competiveness.csv",TRUE)
Data1 <- Dat %>% filter(Consent == "1")
glimpse(Data)
Data1 <- Data %>% filter(Consent == "1")
Data <- read.csv("Envy_competiveness.csv",TRUE)
Data1 <- Data %>% filter(Consent == "1")
#Delete the participants' data that fail the attention checks
Data_attention_check_passed <- Data_attention_check_passed %>% filter(Attention1 == 13)
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy = ((B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>% mutate(HAS = (HAS1+HAS2+HAS3(R)))
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy = ((B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>% mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy = (B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>% mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy = (B1+B2+B3+B4)/4) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>% mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy = (B1+B2+B3+B4)/4)
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy = (B1+B2+B3+B4)/4)
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy=(B1+B2+B3+B4)/4)
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy =((B1+B2+B3+B4)/4))
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy = ((B1+B2+B3+B4)/4))
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy = ((B1+B2+B3+B4)/4))
Data <- read.csv("Envy_competiveness.csv",TRUE)
Data1 <- Data %>% filter(Consent == "1")
#Delete the participants' data that fail the attention checks
Data_attention_check_passed <- Data_attention_check_passed %>% filter(Attention1 == 13)
glimpse(Data_attention_check_passed)
Data <- read.csv("Envy_competiveness.csv",TRUE)
Data1 <- Data %>% filter(Consent == "1")
#Delete the participants' data that fail the attention checks
Data_attention_check_passed <- Data_attention_check_passed %>% filter(Attention1 == 13)
Data_attention_check_passed <- Data_attention_check_passed %>% mutate(Benvy = ((B1+B2+B3+B4)/4))
library(tidyverse)
competitiveness_data <- read.csv("Envy_competiveness.csv",TRUE)
competitiveness_data1 <-competitiveness_data  %>% filter(Consent == "1")
competitiveness_data <- competitiveness_data  %>% filter(Attention1 == 13)
#Delete the participants' data that fail the attention checks
competitiveness_data <- competitiveness_data  %>% filter(Attention 1 == 13)
#Delete the participants' data that fail the attention checks
competitiveness_data <- competitiveness_data  %>% filter(Attention.1 == 13)
competitiveness_data  <- competitiveness_data  %>% mutate(Benvy = ((B1+B2+B3+B4)/4))
competitiveness_data  <- competitiveness_data  %>% mutate(Benvy = ((B1+B2+B3+B4)/4))
%>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>% mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)
competitiveness_data  <- competitiveness_data  %>% mutate(Benvy = ((B1+B2+B3+B4)/4))
%>% mutate(Menvy = ((M1+M2+M3+M4)/4))
competitiveness_data  <- competitiveness_data %>% mutate(Benvy = ((B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4))
competitiveness_data  <- competitiveness_data %>% mutate(Benvy = ((B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>%
mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)
glimpse(competiveness_data)
glimpse(competitiveness_data)
competitiveness_data  <- competitiveness_data %>% mutate(Benvy = ((B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>%
mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)%>%
mutate(PDCA = (PCDA1+PDCA2.R.+PDCA3+PDCA4.Rï..+PDCA5+PDCA6.R.+PDCA7+PDCA8+PDCA9+PDCA10.R.+PDCA11+PDCA12+PDCA13+PDCA14+PDCA15)/15)
competitiveness_data  <- competitiveness_data %>% mutate(Benvy = ((B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>%
mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)%>%
mutate(PDCA =(PCDA1+PDCA2.R.+PDCA3+PDCA4.Rï..+PDCA5+PDCA6.R.+PDCA7+PDCA8+PDCA9+PDCA10.R.+PDCA11+PDCA12+PDCA13+PDCA14+PDCA15)/15)
competitiveness_data  <- competitiveness_data %>% mutate(Benvy = ((B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>%
mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)%>%
mutate(PDCA =((PCDA1+PDCA2.R.+PDCA3+PDCA4.Rï..+PDCA5+PDCA6.R.+PDCA7+PDCA8+PDCA9+PDCA10.R.+PDCA11+PDCA12+PDCA13+PDCA14+PDCA15)/15))
competitiveness_data  <- competitiveness_data %>% mutate(Benvy = ((B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>%
mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)
competitiveness_data  <- competitiveness_data %>% mutate(Benvy = ((B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>%
mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)%>%
mutate(PDCA =(PCDA1+PDCA2.R.+PDCA3+PDCA4.Rï..+PDCA5+PDCA6.R.+PDCA7+PDCA8+PDCA9+PDCA10.R.+PDCA11+PDCA12+PDCA13+PDCA14+PDCA15)/15)
competitiveness_data  <- competitiveness_data %>% mutate(Benvy = ((B1+B2+B3+B4)/4)) %>% mutate(Menvy = ((M1+M2+M3+M4)/4)) %>%
mutate(HAS = (HAS1+HAS2+HAS3.R.+HAS7+HAS8+HAS9+HAS10.R.+HAS11+HAS12+HAS13.R.+HAS14+HAS15.R.+HAS16.R.+HAS17+HAS18.R.+HAS19.R.+HAS20.R.+HAS21+HAS22+HAS23+HAS24.R.+HAS25.R.+HAS26.R.+HAS26.R.)/26)%>%
mutate(PDCA =(PDCA1+PDCA2.R.+PDCA3+PDCA4.Rï..+PDCA5+PDCA6.R.+PDCA7+PDCA8+PDCA9+PDCA10.R.+PDCA11+PDCA12+PDCA13+PDCA14+PDCA15)/15)
glimpse(competitiveness_data)
cor.test(competitiveness_data$PDCA, competitiveness_data$HAS)
cor.test(competitiveness_data$PDCA, competitiveness_data$Menvy)
cor.test(competitiveness_data$PDCA, competitiveness_data$Benvy)
cor.test(competitiveness_data$PDCA, competitiveness_data$Menvy)
cor.test(competitiveness_data$PDCA, competitiveness_data$Benvy)
cor.test(competitiveness_data$PDCA, competitiveness_data$Benvy)
cor.test(competitiveness_data$PDCA, competitiveness_data$Menvy)
cor.test(competitiveness_data$HAS, competitiveness_data$Benvy)
cor.test(competitiveness_data$HAS, competitiveness_data$Menvy)
#Load data
library(tidyverse)
Dat <- read.csv("Prolific-500participants-Numeric.csv",TRUE)
#Only keep participants who consent to participate
Dat1 <- Dat %>% filter(Consent == "1")
#Delete the participants' data that fail the attention checks
Dat_attention_check_passed <- Dat1 %>% filter(Attention1 == 1)
#Load data
library(tidyverse)
Dat <- read.csv("Prolific-500participants-Numeric.csv",TRUE)
#Only keep participants who consent to participate
Dat1 <- Dat %>% filter(Consent == "1")
#Delete the participants' data that fail the attention checks
Dat_attention_check_passed <- Dat1 %>% filter(Attention1 == 1)
# Create IV1 (Advertising/Charity)
library(dplyr)
Dat_attention_check_passed$IV1 =  recode_factor(Dat_attention_check_passed$Random1,"Charity " = "Charity ", "Advertising" = "Advertising","Advertising+Counterfactual" = "Advertising", "Charity+Counterfactual" = "Charity")
#Create IV2(Counterfactual/Non_counterfactual)
Dat_attention_check_passed$IV2 = recode_factor(Dat_attention_check_passed$Random1,
"Charity"= "Non-counterfactual", "Advertising" = "Non-counterfactual","Advertising+Counterfactual" = "Counterfactual", "Charity+Counterfactual" = "Counterfactual")
#transfer the character into numeric answers
selected<-Dat_attention_check_passed%>% select(starts_with("Questions.."))
not_selected <-Dat_attention_check_passed %>% select(!starts_with("Questions.."))
selected <-
selected %>% lapply(as.numeric)
D<- cbind(selected, not_selected)
# Calculate the cronbach alpha for the three measurements/questions that we aggregate to form the composite score later
data1<- D %>% select(c(Questions..1C_1,Questions..1C_2,Questions..1C_3))
data1 <- data.matrix(data1)
#install.packages("umx")
library(umx)
Charity_sample <- D%>% filter(Random1 == "Charity")
Advertising_sample <- D %>% filter(Random1 =="Advertising")
Advertising_Counter <- D %>% filter(Random1 =="Advertising+Counterfactual")
CharityCounter <- D%>% filter(Random1 == "Charity+Counterfactual")
# calculate and mutate the composite score to each sample
Charity_sample<- Charity_sample %>% mutate(Composite_Score = (Questions..1C_1+Questions..1C_2+Questions..1C_3)/3)
Advertising_sample <- Advertising_sample %>% mutate(Composite_Score = (Questions..1A_1+Questions..1A_2+Questions..1A_3)/3)
Advertising_Counter <- Advertising_Counter %>% mutate(Composite_Score = (Questions..1A.C_1+Questions..1A.C_2+Questions..1A.C_3)/3)
CharityCounter <- CharityCounter %>% mutate(Composite_Score = (Questions..1C.C_1+Questions..1C.C_2+Questions..1C.C_3)/3)
#combine the subsamples to get the final dataset
Data_final<- rbind(Charity_sample,
Advertising_sample,
Advertising_Counter,
CharityCounter)
D1<- Charity_sample %>% select(c(Questions..1C_1,Questions..1C_2,Questions..1C_3))
D2 <- Advertising_sample %>% select(c(Questions..1A_1+Questions..1A_2+Questions..1A_3))
Charity_sample <- D%>% filter(Random1 == "Charity")
Advertising_sample <- D %>% filter(Random1 =="Advertising")
Advertising_Counter <- D %>% filter(Random1 =="Advertising+Counterfactual")
CharityCounter <- D%>% filter(Random1 == "Charity+Counterfactual")
D1<- Charity_sample %>% select(c(Questions..1C_1,Questions..1C_2,Questions..1C_3))
D2 <- Advertising_sample %>% select(c(Questions..1A_1,Questions..1A_2,Questions..1A_3))
D3 <- Advertising_Counter %>% select(c(Questions..1A.C_1+Questions..1A.C_2+Questions..1A.C_3))
#Load data
library(tidyverse)
Dat <- read.csv("Prolific-500participants-Numeric.csv",TRUE)
#Only keep participants who consent to participate
Dat1 <- Dat %>% filter(Consent == "1")
#Delete the participants' data that fail the attention checks
Dat_attention_check_passed <- Dat1 %>% filter(Attention1 == 1)
# Create IV1 (Advertising/Charity)
library(dplyr)
Dat_attention_check_passed$IV1 =  recode_factor(Dat_attention_check_passed$Random1,"Charity " = "Charity ", "Advertising" = "Advertising","Advertising+Counterfactual" = "Advertising", "Charity+Counterfactual" = "Charity")
#Create IV2(Counterfactual/Non_counterfactual)
Dat_attention_check_passed$IV2 = recode_factor(Dat_attention_check_passed$Random1,
"Charity"= "Non-counterfactual", "Advertising" = "Non-counterfactual","Advertising+Counterfactual" = "Counterfactual", "Charity+Counterfactual" = "Counterfactual")
#transfer the character into numeric answers
selected<-Dat_attention_check_passed%>% select(starts_with("Questions.."))
not_selected <-Dat_attention_check_passed %>% select(!starts_with("Questions.."))
selected <-
selected %>% lapply(as.numeric)
D<- cbind(selected, not_selected)
#Split the whole sample into sample of each condition
Charity_sample <- D%>% filter(Random1 == "Charity")
Advertising_sample <- D %>% filter(Random1 =="Advertising")
Advertising_Counter <- D %>% filter(Random1 =="Advertising+Counterfactual")
CharityCounter <- D%>% filter(Random1 == "Charity+Counterfactual")
# Calculate the cronbach alpha for the three measurements/questions that we aggregate to form the composite score later
D1<- Charity_sample %>% select(c(Questions..1C_1,Questions..1C_2,Questions..1C_3))
D2 <- Advertising_sample %>% select(c(Questions..1A_1,Questions..1A_2,Questions..1A_3))
D3 <- Advertising_Counter %>% select(c(Questions..1A.C_1+Questions..1A.C_2+Questions..1A.C_3))
Charity_sample<- Charity_sample %>% mutate(Composite_Score = (Questions..1C_1+Questions..1C_2+Questions..1C_3)/3)
Advertising_sample <- Advertising_sample %>% mutate(Composite_Score = (Questions..1A_1+Questions..1A_2+Questions..1A_3)/3)
Advertising_Counter <- Advertising_Counter %>% mutate(Composite_Score = (Questions..1A.C_1+Questions..1A.C_2+Questions..1A.C_3)/3)
CharityCounter <- CharityCounter %>% mutate(Composite_Score = (Questions..1C.C_1+Questions..1C.C_2+Questions..1C.C_3)/3)
D1<- Charity_sample %>% select(c(Questions..1C_1,Questions..1C_2,Questions..1C_3))
D2 <- Advertising_sample %>% select(c(Questions..1A_1,Questions..1A_2,Questions..1A_3))
D3 <- Advertising_Counter %>% select(c(Questions..1A.C_1,Questions..1A.C_2,Questions..1A.C_3))
D4 <- CharityCounter %>% select(C(Questions..1C.C_1+Questions..1C.C_2+Questions..1C.C_3))
D4 <- CharityCounter %>% select(C(Questions..1C.C_1+Questions..1C.C_2+Questions..1C.C_3))
D4 <- CharityCounter %>% select(c(Questions..1C.C_1,Questions..1C.C_2,Questions..1C.C_3))
